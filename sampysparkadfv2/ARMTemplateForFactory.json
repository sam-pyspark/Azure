{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sampysparkadfv2"
		},
		"LS_ABLB_SRC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_SRC'"
		},
		"LS_ABLB_TGT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_TGT'"
		},
		"LS_ADLS_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_ADLS'"
		},
		"LS_ADLS_TEST_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_ADLS_TEST'"
		},
		"LS_ORCL_SRC_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORCL_SRC_DB'"
		},
		"LS_ADLS_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://samdatalake.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_ADLS_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "6d90f351-495b-4a95-81b8-1629cdda79aa"
		},
		"LS_ADLS_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "d79e8a65-cdaf-463b-bd04-58740f5cad7c"
		},
		"LS_ADLS_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "477ff2b5-e627-491d-beab-e7cd08c720bd"
		},
		"LS_ADLS_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "rg_dev"
		},
		"LS_ADLS_TEST_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://samdatalake.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_ADLS_TEST_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "ca1314d3-fd9c-40e7-a7b1-d2cc6d5823a7"
		},
		"LS_ADLS_TEST_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "d79e8a65-cdaf-463b-bd04-58740f5cad7c"
		},
		"LS_ADLS_TEST_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "477ff2b5-e627-491d-beab-e7cd08c720bd"
		},
		"LS_ADLS_TEST_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "rg_dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANS_ADLS_TO_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "joining emp and dept tables from ADLS and creating file in BLOB",
				"activities": [
					{
						"name": "df_emp_dept",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_emp_dept",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-01T02:15:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_emp_dept')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANS_EXISTS_UNION_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_exists_union_lookup",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_exists_union_lookup",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"source4": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-01T06:58:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_exists_union_lookup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_DEPT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dept.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Deptno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "Loc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_EMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "emp.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_TGT_DEPT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_TGT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_TGT_EMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_TGT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Target",
						"container": "pysparkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_TGT_EXISTS_UNION_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_TGT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Target/exists_union_lookup",
						"container": "pysparkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_TGT_JOIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_TGT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Target",
						"container": "pysparkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_SRC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_TGT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_TGT_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_ADLS_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_ADLS_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_ADLS_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_ADLS_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_ADLS_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_TEST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_ADLS_TEST_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_ADLS_TEST_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_TEST_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_ADLS_TEST_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_ADLS_TEST_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_ADLS_TEST_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORCL_SRC_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORCL_SRC_DB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHosted-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHosted-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHosted-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_emp_dept')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_DEPT",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_JOIN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_EMP",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_EMP",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_EMP",
								"type": "DatasetReference"
							},
							"name": "sink4"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as integer,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as integer,\n\t\tHIREDATE as date,\n\t\tSAL as integer,\n\t\tCOMM as integer,\n\t\tDEPTNO as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tDeptno as integer,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source3\nsource1, source2 join(source1@DEPTNO == source2@Deptno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nsource3 split(DEPTNO == '10',\n\tDEPTNO == '20',\n\tdisjoint: false) ~> ConditionalSplit1@(dept10, dept20, otherdept)\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['emp_dept_inner_join.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@dept10 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nConditionalSplit1@dept20 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nConditionalSplit1@otherdept sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_DEPT')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TGT_JOIN')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TGT_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_exists_union_lookup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_DEPT",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP",
								"type": "DatasetReference"
							},
							"name": "source3"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_DEPT",
								"type": "DatasetReference"
							},
							"name": "source4"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_EXISTS_UNION_LOOKUP",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_EXISTS_UNION_LOOKUP",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Exists1"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source3\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source4\nsource1, source2 exists(source1@DEPTNO == source2@Deptno,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nsource3, source4 union(byName: true)~> Union1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['emp_dept_union.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_DEPT')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TGT_EXISTS_UNION_LOOKUP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TGT_EMP",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as short,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 filter(DEPTNO == 10) ~> Filter1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['emp_filter.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TGT_EMP')]"
			]
		}
	]
}